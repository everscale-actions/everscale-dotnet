name: Main workflow

concurrency:
  group: ${{ github.ref }}-ci
  cancel-in-progress: true

on:
  pull_request:
    types: [ labeled, opened, synchronize, reopened ]
  push:
    branches: [ main ]
  release:
    types: [ published ]

env:
  DOTNET_NOLOGO: true
  NUGET_KEY: ${{ secrets.NUGET_API_KEY }}

jobs:
  labels:
    name: Label taking off
    if: github.event.label.name == 'publish'
    runs-on: ubuntu-latest
    steps:
      - name: Take off label
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: >
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: '${{ github.event.label.name }}'
            })
  
  build:
    name: Build, test and pack
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Run Node SE
        run: docker run -d --name tonlab-node -e USER_AGREEMENT=yes -p5555:80 tonlabs/local-node
      
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      
      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ hashFiles('Directory.Packages.props') }}
          restore-keys: |
            nuget-
      
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            3.x
            6.x
            7.x
      
      - name: Restore
        run: dotnet restore -v normal
      
      - name: Build
        run: dotnet build -c Release --no-restore -v normal -ds -m
      
      - name: Wait for Node SE
        run: |
          wget https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
          chmod +x wait-for-it.sh
          ./wait-for-it.sh -s -t 120 localhost:5555
      
      - name: Test
        timeout-minutes: 10
        env:
          EVERSCALE_NETWORK_ENDPOINTS: http://localhost:5555
        run: |
          dotnet test --no-build -c Release --logger "console;verbosity=normal" --logger "trx;LogFilePrefix=results" -m
      
      - name: Test Report
        uses: phoenix-actions/test-reporting@v8
        id: test-report
        if: (success() || failure())
        with:
          name: Tests Report
          path: '**/*.trx'
          reporter: dotnet-trx
          list-suites: failed
          list-tests: failed

      - name: Pack and publish Release package
        if: github.event_name == 'release'
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]//v}"
          echo Publish package version: $VERSION
          dotnet pack -v normal -c Release --include-symbols --include-source -p:PackageVersion=$VERSION -p:RunNumber=${{ github.run_number }}
          dotnet nuget push "src/**/bin/Release/*.nupkg" --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ github.token }} --skip-duplicate
          dotnet nuget push "src/**/bin/Release/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key $NUGET_KEY --skip-duplicate
      
      - name: Pack and publish PR package
        if: github.event.label.name == 'publish'
        run: |
          VERSION=${{ github.event.number }}.${{ github.run_number }}
          dotnet pack -v normal -c Release --include-symbols --include-source -p:PackageVersion=$VERSION
          dotnet nuget push "src/**/bin/Release/*.nupkg" --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ github.token }} --skip-duplicate
